{"version":3,"file":"static/js/153.97715a33.chunk.js","mappings":"4MACA,EAA8B,+BAA9B,EAAkF,sCAAlF,EAA8I,uC,4DCQjIA,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA2CC,EAAAA,EAAAA,MAA3C,eAAOC,EAAP,YAAmBC,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,QACxBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEbL,GACFM,QAAQC,IAAI,gBAAiBP,GAG/B,IAAMQ,EAAc,mCAAG,WAAMC,GAAN,gGAEAV,EAASU,GAFT,QAEbC,EAFa,QAGVC,OACPL,QAAQC,IAAIP,GACZI,EAAS,aACTF,GAASU,EAAAA,EAAAA,IAAQ,CAAEC,MAAOH,EAAKC,KAAKE,UANnB,gDASnBZ,EAAQ,EAAD,IATY,yDAAH,sDAada,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,cAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,QACHtB,EAASuB,GACT,MACF,IAAK,WACHrB,EAAYqB,KAKZC,EAAY,mCAAG,WAAMJ,GAAN,8EACnBA,EAAMK,iBACAC,EAAY,CAChB3B,MAAAA,EACAE,SAAAA,GAJiB,SAMbY,EAAea,GANF,OAOnBC,IAPmB,2CAAH,sDAaZA,EAAQ,WACZ3B,EAAS,IACTE,EAAY,KAGd,OACE,kBACE0B,aAAa,MACbC,SAAUL,EACVM,UAAWC,EAHb,WAKE,mBAAOD,UAAWC,EAAlB,WACE,qCACA,kBACEC,KAAK,QACLV,KAAK,QACLC,MAAOxB,EACPkC,SAAUd,QAGd,mBAAOW,UAAWC,EAAlB,sBAEE,kBACEC,KAAK,WACLV,KAAK,WACLC,MAAOtB,EACPgC,SAAUd,QAGd,mBAAQa,KAAK,SAASF,UAAWC,EAAjC,uBClFN,EAJkB,WAChB,OAAO,SAAClC,EAAD","sources":["webpack://react-homework/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"LoginForm_contactForm__jyI6i\",\"contactForm__label\":\"LoginForm_contactForm__label__2JSTo\",\"contactForm__button\":\"LoginForm_contactForm__button__NFVk6\"};","import css from './LoginForm.module.css';\n\nimport { useState } from 'react';\nimport { isToken } from 'redux/tokenSlice/tokenSlice';\n\nimport { useDispatch } from 'react-redux';\nimport { useLoginRTKMutation } from 'redux/RTKAuthApi/AuthApi';\nimport { useNavigate } from 'react-router-dom';\n\nexport const LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginRTK, { isSuccess, isError }] = useLoginRTKMutation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  if (isSuccess) {\n    console.log('user is loged', isSuccess);\n  }\n\n  const handleLoginRTK = async user => {\n    try {\n      const ress = await loginRTK(user);\n      if (ress.data) {\n        console.log(isSuccess);\n        navigate('/contacts');\n        dispatch(isToken({ token: ress.data.token }));\n      }\n    } catch (error) {\n      isError(error);\n    }\n  };\n\n  const handleImputChange = event => {\n    const { name, value } = event.currentTarget;\n    // eslint-disable-next-line default-case\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const userLogin = {\n      email,\n      password,\n    };\n    await handleLoginRTK(userLogin);\n    reset();\n  };\n\n  // qwertyuiqq@gmail.com\n  // 1234567890qq\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n      className={css.contactForm}\n    >\n      <label className={css.contactForm__label}>\n        <span>email</span>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleImputChange}\n        />\n      </label>\n      <label className={css.contactForm__label}>\n        password\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleImputChange}\n        />\n      </label>\n      <button type=\"submit\" className={css.contactForm__button}>\n        Login\n      </button>\n    </form>\n  );\n};\n\n// function PrivateRoute() {\n//   const isLogin = useSelector(getIsLogin);\n\n//   return isLogin ? <Outlet /> : <Navigate to=\"login\" />;\n// }\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return <LoginForm />;\n};\n\nexport default LoginPage;\n"],"names":["LoginForm","useState","email","setEmail","password","setPassword","useLoginRTKMutation","loginRTK","isSuccess","isError","dispatch","useDispatch","navigate","useNavigate","console","log","handleLoginRTK","user","ress","data","isToken","token","handleImputChange","event","currentTarget","name","value","handleSubmit","preventDefault","userLogin","reset","autoComplete","onSubmit","className","css","type","onChange"],"sourceRoot":""}